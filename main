public static void main(String[] args) {
		
		int array[] = {2,10,33,1,4,0,-1,1};
		int value=secondLargest(array);
		System.out.println("the second largest"+ value);
		int k=3;
		rotateArray(array,0,k);
		rotateArray(array,k,array.length);
		rotateArray(array,0,array.length);
		System.out.println("the final array after rotation");
		for(int i=0;i<array.length;i++) {
			System.out.print(array[i]+ ", ");
		}
		
		int array1[]= {8,4,2};
		//true for {8,4,6}
		System.out.println("is the array non decreasing by max one change? "+nonDecreasing(array1));
		
		int array2[]= {-7, 1, 5, 2, -4, 3, 0};
		int index=equilibriumIndex(array2);
		System.out.println("equilibrium index is : "+ index);
		
		int array3[]= {26, -18, 34, 22, 31, 3, 5, 23, -40, -10};
		int miss=missingPositive(array3);
		System.out.println("missing positive in an array : "+ miss);
		
		int array4[]= {1, 2, 3, 1, 2};
		int unique=uniqueArray(array4);
		System.out.println("number of values to change : "+ unique);
		
		
		ArrayList<ArrayList<Integer>> mat = new ArrayList<ArrayList<Integer>>();
		mat.add(new ArrayList<Integer>());//row 0 created
		mat.add(new ArrayList<Integer>());//row 1 created
		mat.get(0).add(0,1);
		mat.get(0).add(1,0);
		mat.get(1).add(0,0);
		mat.get(1).add(1,1);
		
		System.out.println("the coverage of matrix : " + coverageOfMatrix(mat));
		
		int matrix[][] = { { 1, 3, 5 },
                { 3, 2, 4 },
                { 5, 4, 1 } };
		
		System.out.println("is the matrix is symmetric? " + isMatrixSymmetric(matrix) );
		
		int array5[]= {1,2,3,4,5};
		int target=6;
		System.out.println("No. of pair sum are " +pairSum(array5,5,6));
		ArrayList<Integer> arr1=new ArrayList<Integer>();
		arr1.add(1);
		arr1.add(1);
		arr1.add(2);
		arr1.add(2);
		ArrayList<Integer> arr2=new ArrayList<Integer>();
		arr2.add(1);
		arr2.add(2);
		System.out.println("intersection of two arrays" + findArrayIntersection(arr1,4,arr2,2));
		
		ArrayList<Integer> arr3=new ArrayList<Integer>();
		arr3.add(1);
		arr3.add(0);
		arr3.add(-2);
		arr3.add(3);
		arr3.add(0);
		arr3.add(5);
		arr3.add(0);
		arr3.add(-27);
		pushZerosAtEnd(arr3);
		
		int suarerootNumber=17;
		System.out.println("the squareroot of number is: " + sqrt(suarerootNumber));
		
		long suareroot=17;
		System.out.println("the squareroot of number is: " + sqrtN(suareroot));
		
		int array6[]= {4,5,1,2,3};
		
		System.out.println("element found in rotated array at index : " + searchInRotatedArray(array6,4));
		System.out.println("element found in rotated array at index : " + searchInRotatedArray(array6,3));
		System.out.println("element found in rotated array at index : " + searchInRotatedArray(array6,1));
		System.out.println("element found in rotated array at index : " + searchInRotatedArray(array6,-1));
		
		
		int array7[]= {2,1};
		int neg[]=separateNegativeAndPositive(array7);
		System.out.println("the final array is: ");
		for(int i=0;i<neg.length;i++) {
			System.out.print(neg[i]+",");
		}
		
		int array8[]= {4,3,2,1,4};
		System.out.println("max water area is : "+maxArea(array8));
		int array9[]= {0, 1, 0, 2, 1, 0, 1, 3, 2, 1, 2, 1};
		System.out.println("total water contained is : "+totalArea(array6));
		int array10[]= {0, 1, 0, 2, 1, 0, 1, 0, 2, 0, 0, 0};
		System.out.println("majority candidiate is " + findMajority(array10,12));
		int array11[]= {0, 1, 0, 2, 1, 0, 1, 0, 2, 0, 0, 0};
		sort012(array11);
		
		ArrayList<Integer> arr4=new ArrayList<Integer>();
		arr4.add(1);
		arr4.add(-1);
		arr4.add(-2);
		arr4.add(2);
		System.out.println("the longest subarray length with sum 0 is " + LongestSubsetWithZeroSum(arr4));
		System.out.println("the longest subarray length with sum k is " + lenOfLongSubarr(array8,5,6));
		
		String s1="ABE";
		String s2="ABCDE";
		System.out.println("the subsequence s1 exists in s2: " + isSubsequence(s1, s2));
		
		ArrayList<Integer> arr5=new ArrayList<Integer>();
		arr5.add(5);
		arr5.add(0);
		arr5.add(2);
		arr5.add(3);
		arr5.add(1);
		System.out.println("the count of subarray with sum dig=visible by k are: " + subArrayCount(arr5,5));
		

		
		
	}
	
